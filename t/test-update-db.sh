#!/bin/sh

# create schema if no db
test -f _test.db || sqlite3 _test.db < ../schema.sql || exit 1

# _update.sql is generated by prior tests
sqlite3 _test.db < _update.sql || exit 1

num_hosts=$( sqlite3 -noheader -list _test.db "SELECT COUNT(*) FROM host" )
echo "$num_hosts host records"
test "$num_hosts" -gt 1 || exit 1

num_results=$( sqlite3 -noheader -list _test.db "SELECT COUNT(*) FROM result" )
echo "$num_results result records"
test "$num_results" -gt "$num_hosts" || exit 1

num_messages=$( sqlite3 -noheader -list _test.db "SELECT COUNT(*) FROM message" )
echo "$num_messages message records"
test "$num_messages" -gt 1 || exit 1

num_notices=$( sqlite3 -noheader -list _test.db "SELECT COUNT(*) FROM notice" )
echo "$num_notices notice records"
test "$num_notices" -lt "$num_messages" || exit 1

sqlite3 _test.db <<_SQL_
-- ##### CLUSTER STATE ##########################
SELECT 
    strftime('%Y-%m-%d %H:%M', r.created, 'localtime') as updated, 
    strftime('%Y-%m-%d %H:%M', r.received, 'localtime') as received,    
    round(100 * t.fraction_done) as '%done', 
    result_state.shortname AS result_state,
    task_state.shortname AS task_state,
    iif(final_elapsed_time > 0, time(final_elapsed_time), NULL) AS total_elapsed,
    iif(estimated_cpu_time_remaining > 0, time(estimated_cpu_time_remaining), NULL) AS remaining,
    app_name || '-' || app_version_num AS BOINC_App,
    domain_name,
    p_mfpops + p_miops AS host_mops
FROM 
    result r JOIN host h USING (host_cpid) 
    LEFT JOIN task t using (task_id)
    JOIN result_state ON state = result_state.code
    JOIN task_state ON active_task_state = task_state.code
-- WHERE domain_name = 'droid19'
ORDER BY 
    created DESC, domain_name, 3;

-- ##### LAST 5 LOG MESSAGES FOR EACH NODE ##########################
SELECT
    domain_name, 
    m.hostname,
    datetime(created, 'localtime') as created, 
    project_name,
    substr(replace(body, X'0A', ' '), 0, 99) as mesg
FROM 
    message m
    LEFT JOIN host using (host_cpid)
WHERE 
    m.rowID IN (
        select rowID from message
        where host_cpid = m.host_cpid -- correlated subquery!
        order by created desc, seqno desc 
        limit 5 )
ORDER BY
    domain_name, created DESC;

-- ##### LATEST LOG MESSAGES, GROUPED ##########################
SELECT
    count(*),
    substr(replace(body, X'0A', ' '), 0, 99) as mesg,
    group_concat(distinct project_name)
FROM 
    message m
WHERE 
    datetime(created) >= datetime('now', '-33 day')
    AND hostname = '10.10.10.39'
GROUP BY 2
ORDER BY 1 DESC
LIMIT 10;

-- ##### LATEST LOG MESSAGES FOR ONE PROJECT, GROUPED ##########################
SELECT
    count(*),
    substr(replace(body, X'0A', ' '), 0, 99) as mesg,
    project_name
FROM 
    message m
WHERE 
    datetime(created) >= datetime('now', '-33 day')
    AND project_name = 'Universe@Home'
GROUP BY 2
ORDER BY 1 DESC
LIMIT 10;

-- ##### LOG MESSAGES FOR 1 PROJECT, 1 NODE ##########################
SELECT strftime('%Y-%m-%d %H:%M', created, 'localtime') as created, 
project_name,
substr(replace(body, X'0A', ' '), 0, 99) as mesg 
FROM message JOIN host USING (host_cpid)
WHERE datetime(created) >= datetime('now', '-33 day')
AND domain_name = 'droid19' 
and project_name = 'World Community Grid'
ORDER BY created, seqno;

-- ##### NOTICES ##########################
select
    title,
    substr(replace(description, X'0A', ' '), 0, 99) as notice,
    count(*)
from 
    notice left join host using (host_cpid)
WHERE 
    datetime(created) >= datetime('now', '-33 day')
group by 1, 2;
_SQL_

exit $?
