#!/bin/zsh
##############################################################################
#
# Get cluster state as one big XML document. 
# Issue a BOINC GUI RPC request "get_state" against each cluster
# node, and assemble the results into a XML document.
# See
# https://boinc.berkeley.edu/trac/wiki/GuiRpcProtocol#get_state
#

##############################################################################
readonly CLUSTER_DEF=cluster-def.txt

readonly RPC_ETX=\\003 # control character used by BOINC GUI RPC

readonly TEMP=/tmp/boinc_cluster_state-$$

readonly NOW=$( date -Iseconds )

##############################################################################
debug()
{
	[[ "$DEBUG" ]] && print -u2 "++ $@"
}

##############################################################################
# process command line arguments
readonly RPC_REQUEST=${1:-get_state}
shift

declare -A RPC_PARAMS
readonly RPC_PARAMS=( $* )

debug "RPC request = " $RPC_REQUEST
debug "RPC parameter keys = " ${(k)RPC_PARAMS}

##############################################################################
# gather nodes
if shuf </dev/null	# "shuf" is available
then # shuffle nodes
	CLUSTER_NODES=( $( grep -v '^#' $CLUSTER_DEF | shuf ) )
else
	CLUSTER_NODES=( $( grep -v '^#' $CLUSTER_DEF ) )	
fi

##############################################################################
# get state for all cluster nodes;
# each task executes concurrently
for node in $CLUSTER_NODES
do
	rpc_param=$RPC_PARAMS[$node]
	./boinc-gui-rpc.zsh $node $RPC_REQUEST $rpc_param >$TEMP-$node 2>$TEMP-$node.err &
	debug "$! is requesting from $node: $RPC_REQUEST $rpc_param"
done

wait # for all tasks to finish

##############################################################################
# gather all output into one big XML doc
<<_XML_
<?xml version="1.0" encoding="UTF-8" ?>

<boinc_cluster_state created="$NOW">
_XML_

for node in $CLUSTER_NODES
do
	print "<boinc_client hostname=\"$node\">"
	debug "including $TEMP-$node"
	[[ "$DEBUG" ]] || tr $RPC_ETX \\n <$TEMP-$node
	print "</boinc_client>"
done 

print "</boinc_cluster_state>"

##############################################################################
# cleanup
[[ "$DEBUG" ]] || rm $TEMP-*
