#!/bin/zsh
##############################################################################
#
# Get cluster state as one big XML document. 
# Issue a BOINC GUI RPC request "get_state" against each cluster
# node, and assemble the results into a XML document.
# See
# https://boinc.berkeley.edu/trac/wiki/GuiRpcProtocol#get_state
#
# The XML document produced references a XSL stylesheet; this stylesheet
# is used to transform the document into HTML, client-side. 
# (Not to be confused with the CSS stylesheet, also used by the client.)
#

##############################################################################
readonly BB_NODES=( bb{10,15,30,34,37,47,43,55} )
readonly OTHER_NODES=( beaglebone230 beaglebone369 ) # beaglebone680 )
readonly DROID_NODES=( 10.10.10.{24,28,38,39,46,51} )

readonly RPC_ETX=\\003 # control character used by BOINC GUI RPC

readonly TEMP=/tmp/boinc_cluster_state-$$

# the client will use this stylesheet to transform the result
readonly XSLT=gui.xsl

readonly NOW=$( date -Iseconds )

##############################################################################
debug()
{
	[[ "$DEBUG" ]] && print -u2 "++ $@"
}

##############################################################################
# process command line arguments
readonly RPC_REQUEST=${1:-get_state}
shift

(( $# % 2 == 0 )) || { debug "invalid hashmap: $#" ; exit 1 }
declare -A RPC_PARAMS
readonly RPC_PARAMS=( $* )

debug "RPC request = " $RPC_REQUEST
debug "RPC parameter map = " ${(kv)RPC_PARAMS}

##############################################################################
# gather nodes
if shuf </dev/null	# "shuf" is available
then # shuffle nodes
	NODES=( $( shuf --echo $BB_NODES $OTHER_NODES $DROID_NODES ) )
else
	NODES=( $BB_NODES $OTHER_NODES $DROID_NODES )
fi

##############################################################################
# get state for all cluster nodes;
# each task executes concurrently
for node in $NODES
do
	rpc_param=$RPC_PARAMS[$node]
	./boinc-gui-rpc.zsh $node $RPC_REQUEST $rpc_param >$TEMP-$node 2>$TEMP-$node.err &
	debug "$! is requesting from $node: $RPC_REQUEST $rpc_param"
done

wait # for all tasks to finish

##############################################################################
# gather all output into one big XML doc
cat <<_XML_
<?xml version="1.0" encoding="UTF-8" ?>
<?xml-stylesheet href="$XSLT" type="text/xsl" ?>

<boinc_cluster_state created="$NOW">
_XML_

for node in $NODES
do
	print "<boinc_client hostname=\"$node\">"
	debug "including $TEMP-$node"
	[[ "$DEBUG" ]] || tr $RPC_ETX \\n <$TEMP-$node
	print "</boinc_client>"
done 

print "</boinc_cluster_state>"

##############################################################################
# cleanup
[[ $DEBUG ]] || rm $TEMP-*
