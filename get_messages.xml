#!/bin/zsh
#
# Get new messages only.
# This requires us to interrogate the cluster, in case some nodes have
# restarted. Nodes restart their seqno at 1, while we store the highest
# sequence number in our database.
#
# https://zsh.sourceforge.io/Doc/Release/Expansion.html#Process-Substitution
#

readonly DATABASE=boinc_cluster_state.db
# readonly DATABASE=t/_test.db

./boinc_cluster_state.xml get_message_count |
# cat t/_message_count.xml |
	xsltproc =(<<_XSL_ # this is a "heredoc" with an actual file, rather than stdin
<?xml version='1.0' encoding='UTF-8'?>
<x:stylesheet xmlns:x='http://www.w3.org/1999/XSL/Transform' version='1.0'>
	<x:output method='text' encoding='UTF-8' />
	<x:template match='seqno'>
		UPDATE host SET message_count = <x:value-of select='.' />
		WHERE hostname = &apos;<x:value-of select='../../@hostname' />&apos; ;
	</x:template>
</x:stylesheet>
_XSL_
		) - | sqlite3 "$DATABASE"
		
# get starting seqno per node
# use zero if the sequence was reset (e.g. because the BOINC client restarted)
seqno=( $( sqlite3 -noheader -list -separator ' ' $DATABASE <<_SQL_
SELECT
    hostname, 
    -- m.maxseqno, message_count, iif(message_count < m.maxseqno, 'true', 'false') AS should_reset,
    CASE
        WHEN m.maxseqno IS NULL THEN 0 -- new node w/o any messages
        WHEN message_count IS NULL THEN m.maxseqno -- unclear: client failed to respond?
        WHEN message_count < m.maxseqno THEN 0 -- client restarted, sequence reset 
        ELSE m.maxseqno -- normal case
    END AS seqno
FROM -- outer join in case this is a new host with no messages yet
    host LEFT OUTER JOIN (
        SELECT -- pick the highest seqno of the latest messages, for each host
            host_cpid, max(seqno) AS maxseqno
        FROM -- pick the latest messages, for each host
            ( SELECT host_cpid, max(created) AS created FROM message GROUP BY 1 )
            JOIN message USING (host_cpid, created)
        GROUP BY 1
    ) m USING (host_cpid)
_SQL_
) )

exec ./boinc_cluster_state.xml get_messages $seqno
