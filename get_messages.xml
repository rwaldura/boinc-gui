#!/bin/zsh
#
# Get new messages only.
# This requires us to interrogate the cluster, in case some nodes have
# restarted. Nodes restart their seqno at 1, while we store the highest
# sequence number in our database.
#
# https://zsh.sourceforge.io/Doc/Release/Expansion.html#Process-Substitution
#

readonly DATABASE=boinc_cluster_state.db

readonly XSLT='<?xml version="1.0" encoding="UTF-8"?>
	<x:stylesheet xmlns:x="http://www.w3.org/1999/XSL/Transform" version="1.0">
		<x:output method="text" encoding="UTF-8" />
		<x:template match="seqno">
			UPDATE host SET message_count = <x:value-of select="." />
			WHERE hostname=&apos;<x:value-of select="../../@hostname" />&apos; ;
		</x:template>
	</x:stylesheet>'

./boinc_cluster_state.xml get_message_count |
# cat t/_message_count.xml |
	xsltproc =(<<<$XSLT) - | # this is a "here string" with an actual file, rather than stdin
		sqlite3 "$DATABASE"

# get max seqno per node
seqno=$( sqlite3 -noheader -list -separator ' ' "$DATABASE" <<_SQL_
    SELECT
        hostname,
        iif(message_count < maxseqno, 0, maxseqno)
    FROM ( SELECT 
            h.hostname,
            message_count,
            ifnull(max(seqno), 0) AS maxseqno
        FROM 
            -- LEFT JOIN in case this is a new host that has no messages yet
            host h LEFT JOIN message USING (host_cpid)
        GROUP BY 1, 2 )
_SQL_
)

./boinc_cluster_state.xml get_messages ${=seqno}

